/// <reference types="cypress" />
import helper from '../../PageObjectModel/helper'
describe('Role', () => {
const uniqueSeed = Date.now().toString();
const hp=new helper() 
it('Maintenance -->save,Refresh', () => {
        cy.login()
        cy.get('#actOpenRoles').click()
        cy.get('#actNew').click()
        cy.contains('[ Record displayed. Please make changes and press SAVE. ]').should('be.visible')
        var random_string = hp.GetRandomString()
        cy.get('#txtRoleDescription').should('be.visible').type('test'+uniqueSeed)
        cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')
        cy.get('#FreezedControl_actSave').click({force:true})
        cy.wait(5000)
        cy.contains('[ All changes successfully saved. ]').should('be.visible').should('have.text'," [ All changes successfully saved. ]")
        cy.get('#ddlResource').select('Act App server Transaction').should('have.value','20001010')
        cy.get('#actExecute').click()
        cy.get('#ancAnchor1').click()
        cy.get('.neo-action-retrieve-icon').click()
        cy.get('[role="dialog"]').find('#actSearch').click({force:true})
        cy.wait(5000)
        cy.get('#GridMobileContainer_grvResult > [data-uid="0"] > .neo-row-panel-container > .neo-row-panel-body > :nth-child(1) > .neo-cell-info-field > .neo-checked-control > .neo-grid-check-row').check()
        cy.get('#ui-id-5 > .neo-cell-body > :nth-child(1) > .neo-table-cell > #actOpen > .neo-action-icon').click()
        cy.get('#actAddUser').click()
        cy.get('#ancAnchor2').click()
        cy.get('#ddlRoleCategory').select('Case Management').should('have.value','CASE')
        cy.get('#actExecute2 > .neo-action-icon').click()
        cy.get('#FreezedControl_actRefresh').click({force:true})
        cy.wait(5000)
        cy.contains(' [ All changes successfully cancelled. ]').should('be.visible')
})

it('Maintenance -->dropdown', () => {
          cy.login()
          cy.get('#actOpenRoles').click()
          cy.get('#txtRoleDescription').type('test'+uniqueSeed)
          cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')

        cy.get('#actSearch').click()
        cy.wait(3000)
        cy.get('[data-uid="0"] > .neo-row-panel-container > .neo-row-panel-body > :nth-child(1) > .neo-cell-info-field > .neo-checked-control > .neo-grid-check-row').check()
        cy.get('.neo-table-cell > #actOpen > .neo-action-icon').click()
        cy.wait(3000)
        cy.get('#ddlDropDown_0').select('Execute').should('have.value','5')
        cy.wait(5000)
        cy.get('#FreezedControl_actSave').click()
        cy.wait(5000)
        cy.get('#CenterSplitter').scrollTo('top')
      cy.contains('[ All changes successfully saved. ]').should('be.visible')
      cy.get('#FreezedControl_actRefresh').click({force:true})
      cy.wait(5000)
      cy.get('#CenterSplitter').scrollTo('top')
      cy.contains(' [ All changes successfully cancelled. ]').should('be.visible')


})

it('Maintenance -->delete', () => {
          cy.login()
          cy.get('#actOpenRoles').click()
          cy.get('#txtRoleDescription').type('test'+uniqueSeed)
          cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')
          cy.get('#actSearch').click()
          cy.wait(3000)
          cy.get('.neo-grid-check-row').check()
          cy.get('.neo-table-cell > #actOpen > .neo-action-icon').click()
          cy.wait(3000)
          cy.get('#ancAnchor2').click({force:true})
          cy.get('#tshCategory').find('.neo-grid-check-row').check()
          cy.get('#tshCategory').find('#actDelete').click()
          cy.wait(5000)
          cy.get('#CenterSplitter').scrollTo('top')
          cy.contains(' [ Selected record(s) have been deleted. ]').should('be.visible')
})

it('Lookup -->reset', () => {
        cy.login()
        cy.get('#actOpenRoles').click()
        cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')
        cy.get('#actSearch').click()
        cy.wait(3000)
        cy.get('#actReset').click({force:true})
        cy.wait(5000)
        cy.contains('[All search criteria has been reset.]').should('be.visible')
        cy.get('#actOpen').click()
        cy.wait(5000)
        cy.get('#CenterSplitter').scrollTo('top')
        cy.get('[id^=CenterSplitter]').find('.GlobalError[tabindex="0"]').contains('No record selected. Please select record(s) and try again.').should('be.visible')
        cy.get('#actDelete').click()
        cy.wait(5000)
        cy.get('#CenterSplitter').scrollTo('top')
        cy.get('[id^=CenterSplitter]').find('.GlobalError[tabindex="0"]').contains('Please select record(s).').should('be.visible')
      
})

  it('Lookup -->delete,export', () => {
      cy.login()
      cy.get('#actOpenRoles').click()
      cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')
      cy.get('#actSearch').click()
      cy.wait(5000)
      cy.get('#actExport > .neo-action-icon').click()
      cy.wait(5000)
      cy.get('#clickExcel > .neo-action-icon').click()
      cy.get('#CenterSplitter').scrollTo('top')
      cy.contains('Records exported successfully to excel.').should('be.visible')
      
  // // cy.wait(3000)
  // // cy.get('#txtRoleDescription').type('test'+uniqueSeed)
  // // cy.get('#actSearch').click()
  // // cy.get('.neo-grid-check-row').check()
  // //  cy.get('#actDelete').click()
  // //  cy.get('#CenterSplitter').scrollTo('top')
  // //   cy.contains(' [ Selected record(s) have been deleted. ]').should('be.visible')
  // //  cy.get('#actSearch').click()
  // //  cy.wait(5000)
  // //  cy.contains('[ No records met the search criteria. Please change the criteria and search again. ]').should('be.visible')
  })

  it('Lookup -->Store State', () => {
    
    cy.login()
    cy.get('#actOpenRoles').click()
    cy.get('#ddlRoleType').select('Employer').should('have.value','EMP')
    cy.get('#actMisc').click()
    cy.contains('[ Default values saved successfully. ]').should('be.visible')  
    cy.get('#actSearch').click()
    cy.get('#actReset').click({force:true})
    cy.wait(1000)
    cy.get('#actMisc').click()
    cy.wait(1000)
    cy.get('#actSearch').click()
    cy.wait(5000)
    
      
    })

})

