/// <reference types="cypress" />
import helper from '../../PageObjectModel/helper'

describe('Code', () => {
const uniqueSeed = Date.now().toString();
const hp=new helper() 
it('Maintenance -->save', () => {
    cy.login()
    cy.wait(5000)
    cy.get('#actOpenCode').click()
      cy.get('#btnNew').click()
      cy.contains('[ Record displayed. Please make changes and press SAVE. ]').should('be.visible')
    //cy.get('[id^=wfmCodeMaintenance]').find('#GlobalMessageDiv').should('have.text'," [ Record displayed. Please make changes and press SAVE. ]")
    cy.get('#txbCodeID').type(uniqueSeed)
    var random_string = hp.GetRandomString()
    cy.get('#txtCodeDescription').should('be.visible').type('test'+random_string)
    //cy.get('#txtCodeDescription').type('test')
    var random_string = hp.GetRandomString()
    cy.get('#txtdata1_caption').should('be.visible').type('test'+random_string)
    //cy.get('#txtdata1_caption').type('test1')
    cy.get('#txtdata1_type').select('Integer').should('have.value','int')
    var random_string = hp.GetRandomString()
    cy.get('#txtdata2_caption').should('be.visible').type('test'+random_string)
  //  cy.get('#txtdata2_caption').type('Test12')
    cy.get('#txtdata2_type').select('Integer').should('have.value','int')
    var random_string = hp.GetRandomString()
    cy.get('#txtdata3_caption').should('be.visible').type('test'+random_string)
    //cy.get('#txtdata3_caption').type('test875')
    cy.get('#txtdata3_type').select('Integer').should('have.value','int')
    var random_string = hp.GetRandomString()
    cy.get('#txtfirst_maintenance_item').should('be.visible').type('test'+random_string)
    //cy.get('#txtfirst_maintenance_item').type('test8455')
    cy.get('#btnSave').click({force:true})
    cy.wait(5000)
    cy.contains('[ All changes successfully saved. ]').should('be.visible')
    //cy.get('[id^=wfmCodeMaintenance]').find('#GlobalMessageDiv').should('have.text'," [ All changes successfully saved. ]")
    cy.get('#btnSave').click({force:true})
    cy.wait(2000)
    cy.contains('No changes to save.').should('be.visible')
  })

it(' Maintenance -->New,delete,save', () => {
  const hp=new helper() 
  cy.login()
  cy.get('#actOpenCode').click()
  cy.get('#txtcode_id').type(uniqueSeed)
  cy.get('#btnSearch > .neo-action-icon').click()
  cy.wait(3000)
  cy.contains(' [ 1 Records met the search criteria. ]').should('be.visible')
  //cy.get('#wfmCodeLookup > #GlobalMessageDiv',{timeout:6000}).should('have.class','GlobalMessage')
  cy.get('.GridLinks').click()
  cy.get('#dvDiv1 > #tblResult > :nth-child(n) > .neo-table-cell > #btnDelete').click()
  cy.contains('Please select record(s).').should('be.visible')
   cy.get('#btnNew').click({force:true})
   cy.wait(5000)
  //  cy.get('#dvDiv1 > #tblResult > :nth-child(n) > .neo-table-cell > #btnDelete').click()
    // cy.get('[id^=wfmCodeMaintenance]').find('#GlobalMessageDiv').should('have.text',"Please select record(s).")
   // cy.get('#dvDiv1 > #tblResult > :nth-child(n) > .neo-table-cell > #btnNew > .neo-action-icon').click()
   //cy.get('#btnNew').click({force:true})
   //cy.wait(5000)
    var random_string = hp.GetRandomString()
    cy.get('#txtcodevalue').should('be.visible').type('test'+random_string)
   // cy.get('#txtcodevalue').type('547')
   var random_string = hp.GetRandomString()
    cy.get('#txtDescription').should('be.visible').type('test'+random_string)
    
    //cy.get('#txtDescription').type('test')
    cy.get('#FreezedControl_btnSave').click()
    cy.wait(5000)
    cy.BreadcrumeClose()
    cy.get('#dvDiv1 > #tblResult > :nth-child(n) > .neo-table-cell > #GridTable_dgrResult > #GridMobileContainer_dgrResult > .neo-row-panel > .neo-row-panel-container > .neo-row-panel-body > :nth-child(n) > .neo-cell-info-field > .neo-checked-control > .neo-grid-check-row').check()
   // cy.get('.neo-row > .neo-row-panel-container > .neo-row-panel-body > :nth-child(n) > .neo-cell-info-field > .neo-checked-control > .neo-grid-check-row').check({force:true})
    cy.wait(2000)
    cy.get('#dvDiv1 > #tblResult > :nth-child(n) > .neo-table-cell > #btnDelete > .neo-action-icon').click({force:true})
    cy.wait(5000)
    cy.contains(' [ Selected record(s) have been deleted. ]').should('be.visible')
  //  cy.get('[id^=wfmCodeMaintenance]').find('#GlobalMessageDiv').should('have.text',"[ Selected record(s) have been deleted. ]")
})
it('Maintenance -->Refresh ', () => {
  cy.login()
  cy.get('#actOpenCode').click()
  cy.get('#txtcode_id').type(uniqueSeed)
  cy.get('#btnSearch > .neo-action-icon').click()
  cy.wait(3000)
  //cy.get('#wfmCodeLookup > #GlobalMessageDiv',{timeout:6000}).should('have.class','GlobalMessage')
  cy.get('.GridLinks').click()
    cy.get('#FreezedControl_btnCancel > .neo-action-icon').click({force:true})
    cy.wait(5000)
    cy.contains('[ All changes successfully cancelled. ]').should('be.visible')

 
  })
  it('Lookup -->StoreState,Reset', () => {
    
    cy.login()
    cy.get('#actOpenCode').click()
    cy.get('#txtdescription').type('gender')
    cy.get('#btnStoreDefaults').click()
    cy.contains('[ Default values saved successfully. ]').should('be.visible')  
    cy.get('#btnSearch').click()
    cy.wait(5000)
    cy.get('#btnReset').click({force:true})
    cy.wait(5000)
    cy.contains('[All search criteria has been reset.]').should('be.visible')
    cy.get('#btnStoreDefaults').click()
    cy.wait(1000)
    cy.get('#btnSearch').click()
    cy.wait(5000)
      
    })

})